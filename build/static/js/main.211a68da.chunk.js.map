{"version":3,"sources":["Menu.js","Contact.js","Carousel.js","Login.js","Signup.js","App.js","serviceWorker.js","index.js"],"names":["Example","props","useState","isOpen","setIsOpen","toggle","Navbar","color","expand","NavItem","to","NavbarToggler","onClick","Collapse","navbar","Nav","className","style","marginRight","Contact","Component","items","src","altText","caption","header","key","UncontrolledCarousel","size","Alert","Form","margin","Row","form","Col","md","FormGroup","Label","for","Input","type","name","id","placeholder","Button","state","email","pw","add","city","phone","cnic","arr","send","setState","target","value","give","axios","get","then","response","data","console","log","blow","post","Object","values","this","backgroundColor","onChange","check","Home","Carousel","Noo","App","Menu","path","exact","component","Signup","Login","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.211a68da.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  Nav,\r\n  NavItem,\r\n  // NavbarBrand,\r\n  // NavLink,\r\n  // UncontrolledDropdown,\r\n  // DropdownToggle,\r\n  // DropdownMenu,\r\n  // DropdownItem\r\n} from 'reactstrap';\r\n\r\nconst Example = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"dark\" expand=\"md\">\r\n        <NavItem><Link to=\"/\">Home</Link></NavItem>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem style={{ marginRight: \"12px\" }}>\r\n              <Link to=\"/Login\">Login</Link>\r\n            </NavItem>\r\n            <NavItem>\r\n              <Link to=\"/Contact\">Contact Us</Link>\r\n            </NavItem>\r\n        <NavbarToggler onClick={toggle} />\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Example;","import React, { Component } from 'react'\r\n\r\nexport default class Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>haan jani Contact pe aagaye</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { UncontrolledCarousel } from 'reactstrap';\r\n\r\nconst items = [\r\n  {\r\n    src: 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa1d%20text%20%7B%20fill%3A%23555%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa1d%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23777%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22285.921875%22%20y%3D%22218.3%22%3EFirst%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',\r\n    altText: 'Slide 1',\r\n    caption: 'Slide 1',\r\n    header: 'Slide 1 Header',\r\n    key: '1'\r\n  },\r\n  {\r\n    src: 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa20%20text%20%7B%20fill%3A%23444%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa20%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23666%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22247.3203125%22%20y%3D%22218.3%22%3ESecond%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',\r\n    altText: 'Slide 2',\r\n    caption: 'Slide 2',\r\n    header: 'Slide 2 Header',\r\n    key: '2'\r\n  },\r\n  {\r\n    src: 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa21%20text%20%7B%20fill%3A%23333%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa21%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23555%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22277%22%20y%3D%22218.3%22%3EThird%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',\r\n    altText: 'Slide 3',\r\n    caption: 'Slide 3',\r\n    header: 'Slide 3 Header',\r\n    key: '3'\r\n  }\r\n];\r\n\r\nconst Example = () => <UncontrolledCarousel style={{ size:\"100px\"}} items={items} />;\r\n\r\nexport default Example;","import React from 'react';\r\nimport { Col, Alert, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Example = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <br /> <br />\r\n      <h2 className=\"text-center\"><Alert color=\"primary\">Sign In</Alert></h2>\r\n      <Form style={{ margin: \"10px\" }}>\r\n\r\n        <br />\r\n        <Row form>\r\n          <Col md={7}>\r\n            <FormGroup>\r\n              <Label for=\"exampleEmail\">Email</Label>\r\n              <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"\" />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={7}>\r\n            <FormGroup>\r\n              <Label for=\"examplePassword\">Password</Label>\r\n              <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"Enter your Password\" />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Button className=\"text-center\" color=\"primary\">Sign in</Button>\r\n        <br /><br />\r\n        <Alert className=\"text-center\" color=\"primary\">\r\n          Don't have an account yet? <Link to=\"/Signup\" className=\"alert-link\">Sign Up </Link>here.\r\n      </Alert>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Example;","import React, { Component } from 'react';\r\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nclass Example extends Component {\r\n    state = {\r\n        email: \"\",\r\n        pw: \"\",\r\n        add: \"\",\r\n        city: \"\",\r\n        phone: \"\",\r\n        cnic: \"\",\r\n        arr:[]\r\n    }\r\n    \r\n    send = (props) => {\r\n        this.setState({ [props.target.name]: props.target.value })\r\n    }\r\n    give = () => {\r\n        return (\r\n            axios.get('https://ipt-project-5dafe.firebaseio.com/myTable/-Lrikw6Jln8pWriCbFmY.json')\r\n                .then((response) => {\r\n                    this.setState({\r\n                        arr: response.data,\r\n                        })\r\n                    console.log(response);\r\n                }\r\n                )\r\n        )\r\n    }\r\n\r\n    blow = () => {\r\n        return (\r\n            axios.post('https://ipt-project-5dafe.firebaseio.com/myTable.json',this.state)\r\n                .then((response) => {\r\n                    console.log(response);\r\n                }\r\n                )\r\n        )\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        var abc = Object.values(this.state.arr);\r\n        return (\r\n            <div style={{ backgroundColor: \"black\", color: \"white\" }} >\r\n                <br /> <br />\r\n                <h2 className=\"text-center\">Sign Up</h2>\r\n                <Form style={{ margin: \"10px\" }}>\r\n\r\n\r\n                    <br />\r\n                    <Row form>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\">Email</Label>\r\n                                <Input onChange={this.send} type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"\" />\r\n                            </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"examplePassword\">Password</Label>\r\n                                <Input onChange={this.send} type=\"password\" name=\"pw\" id=\"examplePassword\" placeholder=\"Enter your Password\" />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <FormGroup>\r\n                        <Label for=\"exampleAddress\">Address</Label>\r\n                        <Input onChange={this.send} type=\"text\" name=\"add\" id=\"exampleAddress\" placeholder=\"complete address\" />\r\n                    </FormGroup>\r\n                    <Row form>\r\n                        <Col md={4}>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleCity\">City</Label>\r\n                                <Input onChange={this.send} type=\"text\" name=\"city\" id=\"exampleCity\" />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleZip\">Phone no.</Label>\r\n                                <Input onChange={this.send} type=\"number\" name=\"phone\" id=\"exampleZip\" />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleState\">CNIC no.</Label>\r\n                                <Input onChange={this.send} type=\"number\" name=\"cnic\" id=\"exampleState\" />\r\n                            </FormGroup>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    <FormGroup check>\r\n                        <Input type=\"checkbox\" name=\"check\" id=\"exampleCheck\" />\r\n                        <Label for=\"exampleCheck\" check>Accept Terms and Conditions</Label>\r\n                    </FormGroup><br />\r\n                    <Button onClick={this.blow} color=\"primary\">Sign Up</Button>\r\n                    <Button onClick={this.blow} color=\"primary\">print</Button>\r\n                    <br /><br />\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Example;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Menu from './Menu.js';\nimport Contact from './Contact';\n// import About from './About';\nimport Carousel from './Carousel';\nimport Login from './Login';\nimport Signup from './Signup'\nfunction App() {\n \n  return (\n    <BrowserRouter>\n\n      <Menu />\n      <Switch>\n         <Route path='/' exact component= {Home}/>\n        <Route path='/Signup' component={Signup}/>\n        <Route path='/Contact' component={Contact}/>\n        <Route path='/Login' component={Login}/>  \n        <Route component={Noo}/> \n        {/* Agar koi sa bhi page(component na milay to ye run hoiga) */}\n      </Switch>\n    </BrowserRouter>\n  );\n}\nconst Home = () => {\n\n  return (\n      <div>\n          {/* <h2>Welcome to Home page</h2> */}\n          <Carousel/>\n      </div>\n  )\n}\n//Error Page\nconst Noo = () => {\n\n  return (\n      <div>\n      \n          <h2>404 Page not found</h2>\n      </div>\n  )\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}